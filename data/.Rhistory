Rand_transitions <- tapply(Randdata$reward, list( Randdata$reward, Randdata$prev_rew), length)
Rand_transitions_temp <- Rand_transitions
sums <- colSums(Rand_transitions)
for (i in seq(length(Rand_transitions[,1]))) {
Rand_transitions[i,] <- Rand_transitions_temp[i,]/sums
}
tx <- Rand_transitions[order(as.integer(row.names(Rand_transitions)), decreasing = T),]
heatmap.2(tx[,2:5], cellnote=round(tx[,2:5],3), Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"),
dendrogram = 'none', notecol='black', revC=T, notecex=1.5, trace='none',
breaks = c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0),
scale="none", xlab = "previous trial", ylab = 'trial')
Lag_transitions <- tapply(Lagdata$reward, list( Lagdata$reward, Lagdata$prev_rew), length)
Lag_transitions_temp <- Lag_transitions
sums <- colSums(Lag_transitions)
for (i in seq(length(Lag_transitions[,1]))) {
Lag_transitions[i,] <- Lag_transitions_temp[i,]/sums
}
tx <- Lag_transitions[order(as.integer(row.names(Lag_transitions)), decreasing = T),]
heatmap.2(tx[,2:5], cellnote=round(tx[,2:5],3), Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"),
dendrogram = 'none', notecol='black', revC=T, notecex=1.5, trace='none',
breaks = c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0),
scale="none", xlab = "previous trial", ylab = 'trial')
####################################################################
maindata$nback <- NA
for (i in 2:length(maindata[,1])) {
found <- 0
for (j in seq(maindata[i,]$trial-1)) {
if ( (maindata[i,]$res == maindata[i-j,]$res) & (found == 0)) {
maindata$nback[i] <- j
found = 1
}
}
}
hist(maindata$nback, breaks = c(0,1,2,3,4,5,6,7,8,9,10, 100000000000000), xlim=c(0,10), col='grey')
RLdata <- maindata[maindata$subj %in% RL_subj,]
Lagdata <- maindata[maindata$subj %in% Lag_subj,]
hist(RLdata$nback, breaks = c(0,1,2,3,4,5,6,7,8,9,10, 100000000000000), xlim=c(0,10), col='grey', main='RL')
hist(Lagdata$nback, breaks = c(0,1,2,3,4,5,6,7,8,9,10, 100000000000000), xlim=c(0,10), col='grey', main='Lag')
# hazard rate should be able to  be computer from proportion of length(x == nback)/length(x >= nback)
hazard_lengths <- tapply( maindata$nback, list(maindata$nback, maindata$subj), length )
hazard_lengths[is.na(hazard_lengths)] <- 0
# cut out the zero row which is meaningless
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]
hazard_sums <- hazard_lengths
for (i in seq(2:length(hazard_lengths[,1]))) {
hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )
}
hazard_props <- hazard_lengths/hazard_sums
hazard_means <- rowMeans(hazard_props, na.rm=T)
library(matrixStats)
hazard_sds <- rowSds(hazard_props, na.rm=T)
hazard_Ns <- rowSums(!is.na(hazard_props))
hazard_ses <- hazard_sds/sqrt(hazard_Ns)
x= seq(10)
plot( hazard_means, type='l', xlim=c(0,10))
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
###############
hazard_lengths <- tapply( RLdata$nback, list(RLdata$nback, RLdata$subj), length )
hazard_lengths[is.na(hazard_lengths)] <- 0
# cut out the zero row which is meaningless
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]
hazard_sums <- hazard_lengths
for (i in seq(2:length(hazard_lengths[,1]))) {
hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )
}
hazard_props <- hazard_lengths/hazard_sums
hazard_means <- rowMeans(hazard_props, na.rm=T)
library(matrixStats)
hazard_sds <- rowSds(hazard_props, na.rm=T)
hazard_Ns <- rowSums(!is.na(hazard_props))
hazard_ses <- hazard_sds/sqrt(hazard_Ns)
x= seq(10)
plot( hazard_means, type='l', xlim=c(0,10))
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
#####################
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$subj), length )
hazard_lengths[is.na(hazard_lengths)] <- 0
# cut out the zero row which is meaningless
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]
hazard_sums <- hazard_lengths
for (i in seq(2:length(hazard_lengths[,1]))) {
hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )
}
hazard_props <- hazard_lengths/hazard_sums
hazard_means <- rowMeans(hazard_props, na.rm=T)
library(matrixStats)
hazard_sds <- rowSds(hazard_props, na.rm=T)
hazard_Ns <- rowSums(!is.na(hazard_props))
hazard_ses <- hazard_sds/sqrt(hazard_Ns)
x= seq(10)
plot( hazard_means, type='l', xlim=c(0,10))
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
##############################
hazard_lengths <- tapply( Randdata$nback, list(Randdata$nback, Randdata$subj), length )
hazard_lengths[is.na(hazard_lengths)] <- 0
# cut out the zero row which is meaningless
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]
hazard_sums <- hazard_lengths
for (i in seq(2:length(hazard_lengths[,1]))) {
hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )
}
hazard_props <- hazard_lengths/hazard_sums
hazard_means <- rowMeans(hazard_props, na.rm=T)
library(matrixStats)
hazard_sds <- rowSds(hazard_props, na.rm=T)
hazard_Ns <- rowSums(!is.na(hazard_props))
hazard_ses <- hazard_sds/sqrt(hazard_Ns)
x= seq(10)
plot( hazard_means, type='l', xlim=c(0,10))
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
####################################################################
choice_props <- tapply(alldata$reward, list(alldata$subj, alldata$reward), length)
0.4290625
t.test(choice_props_adults, choice_props_kids, var.equal=T)
d.t.unpaired<-function(t.val,n1,n2){
d<-t.val*sqrt((n1+n2)/(n1*n2))
names(d)<-"effect size d"
return(d)
}
block1 <- maindata[maindata$trial <= 20,]
block2 <- maindata[maindata$trial > 20 & maindata$trial <= 40,]
block3 <- maindata[maindata$trial > 40 & maindata$trial <= 60,]
block4 <- maindata[maindata$trial > 60 & maindata$trial <= 80,]
block5 <- maindata[maindata$trial > 80 & maindata$trial <= 100,]
block1_choices <- tapply(block1$reward, list(block1$subj, block1$reward), length)
block1_choices[is.na(block1_choices)] <- 0
block2_choices <- tapply(block2$reward, list(block2$subj, block2$reward), length)
block2_choices[is.na(block2_choices)] <- 0
block3_choices <- tapply(block3$reward, list(block3$subj, block3$reward), length)
block3_choices[is.na(block3_choices)] <- 0
block4_choices <- tapply(block4$reward, list(block4$subj, block4$reward), length)
block4_choices[is.na(block4_choices)] <- 0
block5_choices <- tapply(block5$reward, list(block5$subj, block5$reward), length)
block5_choices[is.na(block5_choices)] <- 0
# means
line10_means <- c( mean(block1_choices[,4]),
mean(block2_choices[,4]),
mean(block3_choices[,4]),
mean(block4_choices[,4]),
mean(block5_choices[,4]))
line3_means <- c( mean(block1_choices[,3]),
mean(block2_choices[,3]),
mean(block3_choices[,3]),
mean(block4_choices[,3]),
mean(block5_choices[,3]))
line2_means <- c( mean(block1_choices[,2]),
mean(block2_choices[,2]),
mean(block3_choices[,2]),
mean(block4_choices[,2]),
mean(block5_choices[,2]))
line1_means <- c( mean(block1_choices[,1]),
mean(block2_choices[,1]),
mean(block3_choices[,1]),
mean(block4_choices[,1]),
mean(block5_choices[,1]))
# standard deviations
line10_sds <- c( sd(block1_choices[,4]),
sd(block2_choices[,4]),
sd(block3_choices[,4]),
sd(block4_choices[,4]),
sd(block5_choices[,4]))
line3_sds <- c( sd(block1_choices[,3]),
sd(block2_choices[,3]),
sd(block3_choices[,3]),
sd(block4_choices[,3]),
sd(block5_choices[,3]))
line2_sds <- c( sd(block1_choices[,2]),
sd(block2_choices[,2]),
sd(block3_choices[,2]),
sd(block4_choices[,2]),
sd(block5_choices[,2]))
line1_sds <- c( sd(block1_choices[,1]),
sd(block2_choices[,1]),
sd(block3_choices[,1]),
sd(block4_choices[,1]),
sd(block5_choices[,1]))
# Ns
line10_lengths <- c( length(block1_choices[,4]),
length(block2_choices[,4]),
length(block3_choices[,4]),
length(block4_choices[,4]),
length(block5_choices[,4]))
line3_lengths <- c( length(block1_choices[,3]),
length(block2_choices[,3]),
length(block3_choices[,3]),
length(block4_choices[,3]),
length(block5_choices[,3]))
line2_lengths <- c( length(block1_choices[,2]),
length(block2_choices[,2]),
length(block3_choices[,2]),
length(block4_choices[,2]),
length(block5_choices[,2]))
line1_lengths <- c( length(block1_choices[,1]),
length(block2_choices[,1]),
length(block3_choices[,1]),
length(block4_choices[,1]),
length(block5_choices[,1]))
line10_ses <- line10_sds/sqrt(line10_lengths)
line3_ses <- line3_sds/sqrt(line3_lengths)
line2_ses <- line2_sds/sqrt(line2_lengths)
line1_ses <- line1_sds/sqrt(line1_lengths)
plot(line10_means/20, type='l', col = 'blue',
ylim=c(0,1), ylab='Proportion of selections',
xlab="Block (20 trials)", main='', cex.lab= 1.4, cex.axis=1.3, lwd=3)
lines(line3_means/20, col = 'green', lwd=3)
lines(line2_means/20, col = 'yellow', lwd=3)
lines(line1_means/20, col = 'red', lwd=3)
x <- seq(5)
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
legend(1, 1.0, c("10", "3", "2", "1"),
col = c("blue", "green", "yellow", "red"),
lty = c(1,1,1,1), cex = 1.2)
subjects <- unique(alldata$subj)
graphs_per_row = 5
#par(mfrow=c( ceiling(length(subjects) / graphs_per_row), graphs_per_row))
par(mfrow=c(3,5))
for (i in subjects) {
graphdata <- maindata[maindata$subj == i,]
block1 <- graphdata[graphdata$trial <= 20,]
block2 <- graphdata[graphdata$trial > 20 & graphdata$trial <= 40,]
block3 <- graphdata[graphdata$trial > 40 & graphdata$trial <= 60,]
block4 <- graphdata[graphdata$trial > 60 & graphdata$trial <= 80,]
block5 <- graphdata[graphdata$trial > 80 & graphdata$trial <= 100,]
block1_choices <- c(0,0,0,0)
block2_choices <- c(0,0,0,0)
block3_choices <- c(0,0,0,0)
block4_choices <- c(0,0,0,0)
block5_choices <- c(0,0,0,0)
block1_choices[1] <- length(block1[block1$reward == 1,]$reward)
block1_choices[2] <- length(block1[block1$reward == 2,]$reward)
block1_choices[3] <- length(block1[block1$reward == 3,]$reward)
block1_choices[4] <- length(block1[block1$reward == 10,]$reward)
block1_choices[is.na(block1_choices)] <- 0
block2_choices[1] <- length(block2[block2$reward == 1,]$reward)
block2_choices[2] <- length(block2[block2$reward == 2,]$reward)
block2_choices[3] <- length(block2[block2$reward == 3,]$reward)
block2_choices[4] <- length(block2[block2$reward == 10,]$reward)
block2_choices[is.na(block2_choices)] <- 0
block3_choices[1] <- length(block3[block3$reward == 1,]$reward)
block3_choices[2] <- length(block3[block3$reward == 2,]$reward)
block3_choices[3] <- length(block3[block3$reward == 3,]$reward)
block3_choices[4] <- length(block3[block3$reward == 10,]$reward)
block3_choices[is.na(block3_choices)] <- 0
block4_choices[1] <- length(block4[block4$reward == 1,]$reward)
block4_choices[2] <- length(block4[block4$reward == 2,]$reward)
block4_choices[3] <- length(block4[block4$reward == 3,]$reward)
block4_choices[4] <- length(block4[block4$reward == 10,]$reward)
block4_choices[is.na(block4_choices)] <- 0
block5_choices[1] <- length(block5[block5$reward == 1,]$reward)
block5_choices[2] <- length(block5[block5$reward == 2,]$reward)
block5_choices[3] <- length(block5[block5$reward == 3,]$reward)
block5_choices[4] <- length(block5[block5$reward == 10,]$reward)
block5_choices[is.na(block5_choices)] <- 0
# means
line10 <- c( block1_choices[4]/20,
block2_choices[4]/20,
block3_choices[4]/20,
block4_choices[4]/20,
block5_choices[4]/20)
line3 <- c( block1_choices[3]/20,
block2_choices[3]/20,
block3_choices[3]/20,
block4_choices[3]/20,
block5_choices[3]/20)
line2 <- c( block1_choices[2]/20,
block2_choices[2]/20,
block3_choices[2]/20,
block4_choices[2]/20,
block5_choices[2]/20)
line1 <- c( block1_choices[1]/20,
block2_choices[1]/20,
block3_choices[1]/20,
block4_choices[1]/20,
block5_choices[1]/20)
plot(line10, type='l', col = 'blue', ylim=c(0,1), ylab='',
xlab="Block", mar = c(0.1,0.1,0.1,0.1))
#, main=toString(i))
lines(line3, col = 'green')
lines(line2, col = 'yellow')
lines(line1, col = 'red')
}
#####################################################################################
###############################################
choice_props <- tapply(RLdata$reward, list(RLdata$subj, RLdata$reward), length)
block1 <- RLdata[RLdata$trial <= 20,]
block2 <- RLdata[RLdata$trial > 20 & RLdata$trial <= 40,]
block3 <- RLdata[RLdata$trial > 40 & RLdata$trial <= 60,]
block4 <- RLdata[RLdata$trial > 60 & RLdata$trial <= 80,]
block5 <- RLdata[RLdata$trial > 80 & RLdata$trial <= 100,]
block1_choices <- tapply(block1$reward, list(block1$subj, block1$reward), length)
block1_choices[is.na(block1_choices)] <- 0
block2_choices <- tapply(block2$reward, list(block2$subj, block2$reward), length)
block2_choices[is.na(block2_choices)] <- 0
block3_choices <- tapply(block3$reward, list(block3$subj, block3$reward), length)
block3_choices[is.na(block3_choices)] <- 0
block4_choices <- tapply(block4$reward, list(block4$subj, block4$reward), length)
block4_choices[is.na(block4_choices)] <- 0
block5_choices <- tapply(block5$reward, list(block5$subj, block5$reward), length)
block5_choices[is.na(block5_choices)] <- 0
# means
line10_means <- c( mean(block1_choices[,4]),
mean(block2_choices[,4]),
mean(block3_choices[,4]),
mean(block4_choices[,4]),
mean(block5_choices[,4]))
line3_means <- c( mean(block1_choices[,3]),
mean(block2_choices[,3]),
mean(block3_choices[,3]),
mean(block4_choices[,3]),
mean(block5_choices[,3]))
line2_means <- c( mean(block1_choices[,2]),
mean(block2_choices[,2]),
mean(block3_choices[,2]),
mean(block4_choices[,2]),
mean(block5_choices[,2]))
line1_means <- c( mean(block1_choices[,1]),
mean(block2_choices[,1]),
mean(block3_choices[,1]),
mean(block4_choices[,1]),
mean(block5_choices[,1]))
# standard deviations
line10_sds <- c( sd(block1_choices[,4]),
sd(block2_choices[,4]),
sd(block3_choices[,4]),
sd(block4_choices[,4]),
sd(block5_choices[,4]))
line3_sds <- c( sd(block1_choices[,3]),
sd(block2_choices[,3]),
sd(block3_choices[,3]),
sd(block4_choices[,3]),
sd(block5_choices[,3]))
line2_sds <- c( sd(block1_choices[,2]),
sd(block2_choices[,2]),
sd(block3_choices[,2]),
sd(block4_choices[,2]),
sd(block5_choices[,2]))
line1_sds <- c( sd(block1_choices[,1]),
sd(block2_choices[,1]),
sd(block3_choices[,1]),
sd(block4_choices[,1]),
sd(block5_choices[,1]))
# Ns
line10_lengths <- c( length(block1_choices[,4]),
length(block2_choices[,4]),
length(block3_choices[,4]),
length(block4_choices[,4]),
length(block5_choices[,4]))
line3_lengths <- c( length(block1_choices[,3]),
length(block2_choices[,3]),
length(block3_choices[,3]),
length(block4_choices[,3]),
length(block5_choices[,3]))
line2_lengths <- c( length(block1_choices[,2]),
length(block2_choices[,2]),
length(block3_choices[,2]),
length(block4_choices[,2]),
length(block5_choices[,2]))
line1_lengths <- c( length(block1_choices[,1]),
length(block2_choices[,1]),
length(block3_choices[,1]),
length(block4_choices[,1]),
length(block5_choices[,1]))
line10_ses <- line10_sds/sqrt(line10_lengths)
line3_ses <- line3_sds/sqrt(line3_lengths)
line2_ses <- line2_sds/sqrt(line2_lengths)
line1_ses <- line1_sds/sqrt(line1_lengths)
plot(line10_means/20, type='l', col = 'blue',
ylim=c(0,1), ylab='Proportion of selections',
xlab="Block (20 trials)", main='Value Subjects', cex.lab= 1.4, cex.axis=1.3, lwd=3)
lines(line3_means/20, col = 'green', lwd=3)
lines(line2_means/20, col = 'yellow', lwd=3)
lines(line1_means/20, col = 'red', lwd=3)
legend(1, 1.0, c("10", "3", "2", "1"),
col = c("blue", "green", "yellow", "red"),
lty = c(1,1,1,1), cex = 1.2)
x <- seq(5)
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
###############################################
choice_props <- tapply(Lagdata$reward, list(Lagdata$subj, Lagdata$reward), length)
block1 <- Lagdata[Lagdata$trial <= 20,]
block2 <- Lagdata[Lagdata$trial > 20 & Lagdata$trial <= 40,]
block3 <- Lagdata[Lagdata$trial > 40 & Lagdata$trial <= 60,]
block4 <- Lagdata[Lagdata$trial > 60 & Lagdata$trial <= 80,]
block5 <- Lagdata[Lagdata$trial > 80 & Lagdata$trial <= 100,]
block1_choices <- tapply(block1$reward, list(block1$subj, block1$reward), length)
block1_choices[is.na(block1_choices)] <- 0
block2_choices <- tapply(block2$reward, list(block2$subj, block2$reward), length)
block2_choices[is.na(block2_choices)] <- 0
block3_choices <- tapply(block3$reward, list(block3$subj, block3$reward), length)
block3_choices[is.na(block3_choices)] <- 0
block4_choices <- tapply(block4$reward, list(block4$subj, block4$reward), length)
block4_choices[is.na(block4_choices)] <- 0
block5_choices <- tapply(block5$reward, list(block5$subj, block5$reward), length)
block5_choices[is.na(block5_choices)] <- 0
# means
line10_means <- c( mean(block1_choices[,4]),
mean(block2_choices[,4]),
mean(block3_choices[,4]),
mean(block4_choices[,4]),
mean(block5_choices[,4]))
line3_means <- c( mean(block1_choices[,3]),
mean(block2_choices[,3]),
mean(block3_choices[,3]),
mean(block4_choices[,3]),
mean(block5_choices[,3]))
line2_means <- c( mean(block1_choices[,2]),
mean(block2_choices[,2]),
mean(block3_choices[,2]),
mean(block4_choices[,2]),
mean(block5_choices[,2]))
line1_means <- c( mean(block1_choices[,1]),
mean(block2_choices[,1]),
mean(block3_choices[,1]),
mean(block4_choices[,1]),
mean(block5_choices[,1]))
# standard deviations
line10_sds <- c( sd(block1_choices[,4]),
sd(block2_choices[,4]),
sd(block3_choices[,4]),
sd(block4_choices[,4]),
sd(block5_choices[,4]))
line3_sds <- c( sd(block1_choices[,3]),
sd(block2_choices[,3]),
sd(block3_choices[,3]),
sd(block4_choices[,3]),
sd(block5_choices[,3]))
line2_sds <- c( sd(block1_choices[,2]),
sd(block2_choices[,2]),
sd(block3_choices[,2]),
sd(block4_choices[,2]),
sd(block5_choices[,2]))
line1_sds <- c( sd(block1_choices[,1]),
sd(block2_choices[,1]),
sd(block3_choices[,1]),
sd(block4_choices[,1]),
sd(block5_choices[,1]))
# Ns
line10_lengths <- c( length(block1_choices[,4]),
length(block2_choices[,4]),
length(block3_choices[,4]),
length(block4_choices[,4]),
length(block5_choices[,4]))
line3_lengths <- c( length(block1_choices[,3]),
length(block2_choices[,3]),
length(block3_choices[,3]),
length(block4_choices[,3]),
length(block5_choices[,3]))
line2_lengths <- c( length(block1_choices[,2]),
length(block2_choices[,2]),
length(block3_choices[,2]),
length(block4_choices[,2]),
length(block5_choices[,2]))
line1_lengths <- c( length(block1_choices[,1]),
length(block2_choices[,1]),
length(block3_choices[,1]),
length(block4_choices[,1]),
length(block5_choices[,1]))
line10_ses <- line10_sds/sqrt(line10_lengths)
line3_ses <- line3_sds/sqrt(line3_lengths)
line2_ses <- line2_sds/sqrt(line2_lengths)
line1_ses <- line1_sds/sqrt(line1_lengths)
plot(line10_means/20, type='l', col = 'blue',
ylim=c(0,1), ylab='Proportion of selections',
xlab="Block (20 trials)", main='Lag subjects', cex.lab= 1.4, cex.axis=1.3, lwd=3)
lines(line3_means/20, col = 'green', lwd=3)
lines(line2_means/20, col = 'yellow', lwd=3)
lines(line1_means/20, col = 'red', lwd=3)
legend(1, 1.0, c("10", "3", "2", "1"),
col = c("blue", "green", "yellow", "red"),
lty = c(1,1,1,1), cex = 1.2)
x <- seq(5)
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
#####################################################################################
RL_stay_total <- tapply(RLdata$stay, RLdata$subj, mean)
boxplot(1-RL_stay_total,
ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),
main = 'RL kids')
stripchart(1-RL_stay_total,  vertical = TRUE,
method = "jitter", add = TRUE, pch = 19, col = c('blue'))
abline(0.83, 0, col='red')
abline(0.65, 0, col='red')
Lag_stay_total <- tapply(Lagdata$stay, Lagdata$subj, mean)
boxplot(1-Lag_stay_total,
ylab = 'Proportion of switch responses', col='white', ylim=c(0,1),
main = 'Lag kids')
stripchart(1-Lag_stay_total,  vertical = TRUE,
method = "jitter", add = TRUE, pch = 19, col = c('blue'))
abline(0.83, 0, col='red')
abline(0.65, 0, col='red')
child_data<-alldata
#adult_data <- alldata
################################3
best_props <- choices[,4]/100
x <- lm(best_props~child_age_data$months)
summary(x)
x <- glm(best_props~child_age_data$months, family = 'binomial')
summary(x)
?pwr.f2.test
library(pwr)
?pwr.f2.test
pwr.f2.test(1 = NULL, v = NULL, f2 = 0.01411, sig.level = 0.05, power = 0.8)
pwr.f2.test(u = 1, v = NULL, f2 = 0.01411, sig.level = 0.05, power = 0.8)
?pwr.anova.test
