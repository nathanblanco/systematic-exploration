alldata <- read.table('kids.txt', header=F)#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door')#
alldata$stay <- NULL#
alldata$prev_rew <- NULL#
#
for (i in 1:length(alldata[,1])) {#
    alldata$stay[i] <- as.numeric(alldata[i,]$res == alldata[i-1,]$res)#
    alldata$prev_rew[i] <- alldata[i-1,]$reward#
    if (alldata[i,]$trial == 1) { #
    	alldata$stay[i] <- 0 #
    	alldata$prev_rew[i] <- -1#
    	}#
    }
alldata <- read.table('kids.txt', header=F)#
#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door')#
#kids#
RL_subj <- c(62025, 62026, 62027, 50018, 50020, 50023, 50027, #
			 50028, 50122, 50123, 50124, 50030, 50136, 50137,#
			 50139, 50140, 50141, 1000, 1001, 1003, 1007, #
			 1008, 1009, 1010, 1011, 1015, 2012, 1016, 1021, #
			 1023, 2014, 2018, 2019, 2020, 2021)#
#
Lag_subj <- c(62021, 62022, 62023, 62024, 62028, 62029, 50019, #
			  50117, 50119, 50024, 50025, 50026, 50029, 50031, #
			  50032, 50033, 50034, 50138, 4105, 1004, 1013, 2011, #
			  2013, 1018, 2015, 2016)#
#
random_subj <- c(50142, 1002, 1005, 1006, 1012, 1014, 2010, 1019, 1020, 2017)#
#
#######################################################################
#
RLdata <- alldata[alldata$subj %in% RL_subj & alldata$model == 'RL',]#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
Randdata <- alldata[alldata$subj %in% random_subj & alldata$model == 'Random',]
alldata$nback <- NA#
for (i in 2:length(alldata[,1])) {#
    found <- 0#
    for (j in seq(alldata[i,]$trial-1)) {#
    	if ( (alldata[i,]$res == alldata[i-j,]$res) & (found == 0)) {#
    		alldata$nback[i] <- j#
    		found = 1#
    		}    		#
    	}#
    }
alldata <- read.table('kids.txt', header=F)#
#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback')
alldata <- read.table('kids.txt', header=F)#
#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback')#
#
#####################################################################
#
alldata$nback <- NA#
for (i in 2:length(alldata[,1])) {#
    found <- 0#
    for (j in seq(alldata[i,]$trial-1)) {#
    	if ( (alldata[i,]$res == alldata[i-j,]$res) & (found == 0)) {#
    		alldata$nback[i] <- j#
    		found = 1#
    		}    		#
    	}#
    }#
#######################################################################
#kids#
RL_subj <- c(62025, 62026, 62027, 50018, 50020, 50023, 50027, #
			 50028, 50122, 50123, 50124, 50030, 50136, 50137,#
			 50139, 50140, 50141, 1000, 1001, 1003, 1007, #
			 1008, 1009, 1010, 1011, 1015, 2012, 1016, 1021, #
			 1023, 2014, 2018, 2019, 2020, 2021)#
#
Lag_subj <- c(62021, 62022, 62023, 62024, 62028, 62029, 50019, #
			  50117, 50119, 50024, 50025, 50026, 50029, 50031, #
			  50032, 50033, 50034, 50138, 4105, 1004, 1013, 2011, #
			  2013, 1018, 2015, 2016)#
#
random_subj <- c(50142, 1002, 1005, 1006, 1012, 1014, 2010, 1019, 1020, 2017)#
#
door_subj <- c()
alldata <- read.table('kids.txt', header=F)#
#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback')#
#######################################################################
#kids#
RL_subj <- c(62025, 62026, 62027, 50018, 50020, 50023, 50027, #
			 50028, 50122, 50123, 50124, 50030, 50136, 50137,#
			 50139, 50140, 50141, 1000, 1001, 1003, 1007, #
			 1008, 1009, 1010, 1011, 1015, 2012, 1016, 1021, #
			 1023, 2014, 2018, 2019, 2020, 2021)#
#
Lag_subj <- c(62021, 62022, 62023, 62024, 62028, 62029, 50019, #
			  50117, 50119, 50024, 50025, 50026, 50029, 50031, #
			  50032, 50033, 50034, 50138, 4105, 1004, 1013, 2011, #
			  2013, 1018, 2015, 2016)#
#
random_subj <- c(50142, 1002, 1005, 1006, 1012, 1014, 2010, 1019, 1020, 2017)#
#
door_subj <- c()#
#
# GET ALL THE SUBJ NUMS FOR DOOR DATA AS WELL#
#
#######################################################################
#
RLdata <- alldata[alldata$subj %in% RL_subj & alldata$model == 'RL',]#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
Randdata <- alldata[alldata$subj %in% random_subj & alldata$model == 'Random',]#
Doordata <- alldata[alldata$subj %in% door_subj & alldata$model == 'Door',]
unique(RLdata$model)
hazard_lengths <- tapply( RLdata$nback, list(RLdata$nback, RLdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="RL sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
######################
#
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
hazard_lengths <- tapply( Randdata$nback, list(Randdata$nback, Randdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Random sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
################################################
#
choice_props <- tapply(RLdata$reward, list(RLdata$sim_unique, RLdata$reward), length)#
#
block1 <- RLdata[RLdata$trial <= 20,]#
block2 <- RLdata[RLdata$trial > 20 & RLdata$trial <= 40,]#
block3 <- RLdata[RLdata$trial > 40 & RLdata$trial <= 60,]#
block4 <- RLdata[RLdata$trial > 60 & RLdata$trial <= 80,]#
block5 <- RLdata[RLdata$trial > 80 & RLdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='RL sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
choice_props <- tapply(Lagdata$reward, list(Lagdata$sim_unique, Lagdata$reward), length)#
#
block1 <- Lagdata[Lagdata$trial <= 20,]#
block2 <- Lagdata[Lagdata$trial > 20 & Lagdata$trial <= 40,]#
block3 <- Lagdata[Lagdata$trial > 40 & Lagdata$trial <= 60,]#
block4 <- Lagdata[Lagdata$trial > 60 & Lagdata$trial <= 80,]#
block5 <- Lagdata[Lagdata$trial > 80 & Lagdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Lag sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
choice_props <- tapply(Randdata$reward, list(Randdata$sim_unique, Randdata$reward), length)#
#
block1 <- Randdata[Randdata$trial <= 20,]#
block2 <- Randdata[Randdata$trial > 20 & Randdata$trial <= 40,]#
block3 <- Randdata[Randdata$trial > 40 & Randdata$trial <= 60,]#
block4 <- Randdata[Randdata$trial > 60 & Randdata$trial <= 80,]#
block5 <- Randdata[Randdata$trial > 80 & Randdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Lag sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
alldata <- read.table('adults.txt', header=F)#
#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback')
RLdata <- alldata
hazard_lengths <- tapply( RLdata$nback, list(RLdata$nback, RLdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="RL sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
choice_props <- tapply(RLdata$reward, list(RLdata$sim_unique, RLdata$reward), length)#
#
block1 <- RLdata[RLdata$trial <= 20,]#
block2 <- RLdata[RLdata$trial > 20 & RLdata$trial <= 40,]#
block3 <- RLdata[RLdata$trial > 40 & RLdata$trial <= 60,]#
block4 <- RLdata[RLdata$trial > 60 & RLdata$trial <= 80,]#
block5 <- RLdata[RLdata$trial > 80 & RLdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='RL sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
choice_props
block1_choices
alldata <- read.table('bland.txt', header=F)#
#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback')#
#######################################################################
#kids#
RL_subj <- c(62025, 62026, 62027, 50018, 50020, 50023, 50027, #
			 50028, 50122, 50123, 50124, 50030, 50136, 50137,#
			 50139, 50140, 50141, 1000, 1001, 1003, 1007, #
			 1008, 1009, 1010, 1011, 1015, 2012, 1016, 1021, #
			 1023, 2014, 2018, 2019, 2020, 2021)#
#
Lag_subj <- c(62021, 62022, 62023, 62024, 62028, 62029, 50019, #
			  50117, 50119, 50024, 50025, 50026, 50029, 50031, #
			  50032, 50033, 50034, 50138, 4105, 1004, 1013, 2011, #
			  2013, 1018, 2015, 2016)#
#
random_subj <- c(50142, 1002, 1005, 1006, 1012, 1014, 2010, 1019, 1020, 2017)#
#
door_subj <- c()#
#
# GET ALL THE SUBJ NUMS FOR DOOR DATA AS WELL#
#
#######################################################################
#
RLdata <- alldata[alldata$subj %in% RL_subj & alldata$model == 'RL',]#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
Randdata <- alldata[alldata$subj %in% random_subj & alldata$model == 'Random',]#
Doordata <- alldata[alldata$subj %in% door_subj & alldata$model == 'Door',]
hazard_lengths <- tapply( RLdata$nback, list(RLdata$nback, RLdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="RL sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
hazard_lengths <- tapply( Randdata$nback, list(Randdata$nback, Randdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Random sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
choice_props <- tapply(RLdata$reward, list(RLdata$sim_unique, RLdata$reward), length)#
#
block1 <- RLdata[RLdata$trial <= 20,]#
block2 <- RLdata[RLdata$trial > 20 & RLdata$trial <= 40,]#
block3 <- RLdata[RLdata$trial > 40 & RLdata$trial <= 60,]#
block4 <- RLdata[RLdata$trial > 60 & RLdata$trial <= 80,]#
block5 <- RLdata[RLdata$trial > 80 & RLdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='RL sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
choice_props <- tapply(Lagdata$reward, list(Lagdata$sim_unique, Lagdata$reward), length)#
#
block1 <- Lagdata[Lagdata$trial <= 20,]#
block2 <- Lagdata[Lagdata$trial > 20 & Lagdata$trial <= 40,]#
block3 <- Lagdata[Lagdata$trial > 40 & Lagdata$trial <= 60,]#
block4 <- Lagdata[Lagdata$trial > 60 & Lagdata$trial <= 80,]#
block5 <- Lagdata[Lagdata$trial > 80 & Lagdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Lag sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
################################################
#
choice_props <- tapply(Randdata$reward, list(Randdata$sim_unique, Randdata$reward), length)#
#
block1 <- Randdata[Randdata$trial <= 20,]#
block2 <- Randdata[Randdata$trial > 20 & Randdata$trial <= 40,]#
block3 <- Randdata[Randdata$trial > 40 & Randdata$trial <= 60,]#
block4 <- Randdata[Randdata$trial > 60 & Randdata$trial <= 80,]#
block5 <- Randdata[Randdata$trial > 80 & Randdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Lag sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
alldata <- read.table('door.txt', header=F)#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback')#
#######################################################################
#kids#
RL_subj <- c(62025, 62026, 62027, 50018, 50020, 50023, 50027, #
			 50028, 50122, 50123, 50124, 50030, 50136, 50137,#
			 50139, 50140, 50141, 1000, 1001, 1003, 1007, #
			 1008, 1009, 1010, 1011, 1015, 2012, 1016, 1021, #
			 1023, 2014, 2018, 2019, 2020, 2021,#
			 3092, 8120, 8122, 3098, 3100, 3101, 8123, 2105, 2106, 2107)#
#
Lag_subj <- c(62021, 62022, 62023, 62024, 62028, 62029, 50019, #
			  50117, 50119, 50024, 50025, 50026, 50029, 50031, #
			  50032, 50033, 50034, 50138, 4105, 1004, 1013, 2011, #
			  2013, 1018, 2015, 2016, 2108)#
#
random_subj <- c(50142, 1002, 1005, 1006, 1012, 1014, 2010, 1019, 1020, 2017, 3097)#
#
door_subj <- c(3093, 3094, 3095, 8121, 3096, 3099, 3102, 3103, 3104, 8124, 8125, 8126, 8127, #
				8128, 8129, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117)#
# GET ALL THE SUBJ NUMS FOR DOOR DATA AS WELL#
#
#######################################################################
#
RLdata <- alldata[alldata$subj %in% RL_subj & alldata$model == 'RL',]#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
Randdata <- alldata[alldata$subj %in% random_subj & alldata$model == 'Random',]#
Doordata <- alldata[alldata$subj %in% door_subj & alldata$model == 'Door',]#
#
#######################################################################
#
################
#
hazard_lengths <- tapply( RLdata$nback, list(RLdata$nback, RLdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="RL sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
hazard_lengths <- tapply( Randdata$nback, list(Randdata$nback, Randdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Random sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
hazard_lengths <- tapply( Doordata$nback, list(Doordata$nback, Doordata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Door sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
hazard_lengths
Doordata
Lag_subj
Lagdata
door_subj
alldata[alldata$model == 'Door',]
#alldata <- read.table('kids.txt', header=F)#
#alldata <- read.table('adults.txt', header=F)#
#alldata <- read.table('bland.txt', header=F)#
alldata <- read.table('door.txt', header=F)#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback')#
#######################################################################
#kids#
RL_subj <- c(62025, 62026, 62027, 50018, 50020, 50023, 50027, #
			 50028, 50122, 50123, 50124, 50030, 50136, 50137,#
			 50139, 50140, 50141, 1000, 1001, 1003, 1007, #
			 1008, 1009, 1010, 1011, 1015, 2012, 1016, 1021, #
			 1023, 2014, 2018, 2019, 2020, 2021,#
			 3092, 8120, 8122, 3098, 3100, 3101, 8123, 2105, 2106, 2107)#
#
Lag_subj <- c(62021, 62022, 62023, 62024, 62028, 62029, 50019, #
			  50117, 50119, 50024, 50025, 50026, 50029, 50031, #
			  50032, 50033, 50034, 50138, 4105, 1004, 1013, 2011, #
			  2013, 1018, 2015, 2016, 2108)#
#
random_subj <- c(50142, 1002, 1005, 1006, 1012, 1014, 2010, 1019, 1020, 2017, 3097)#
#
door_subj <- c(3093, 3094, 3095, 8121, 3096, 3099, 3102, 3103, 3104, 8124, 8125, 8126, 8127, #
				8128, 8129, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117)#
# GET ALL THE SUBJ NUMS FOR DOOR DATA AS WELL#
#
#######################################################################
#
RLdata <- alldata[alldata$subj %in% RL_subj & alldata$model == 'RL',]#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
Randdata <- alldata[alldata$subj %in% random_subj & alldata$model == 'Random',]#
Doordata <- alldata[alldata$subj %in% door_subj & alldata$model == 'Door',]#
#
#######################################################################
#
################
#
hazard_lengths <- tapply( RLdata$nback, list(RLdata$nback, RLdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="RL sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
######################
#
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
#
###############################
hazard_lengths <- tapply( Doordata$nback, list(Doordata$nback, Doordata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Door sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
Doordata
#alldata <- read.table('kids.txt', header=F)#
#alldata <- read.table('adults.txt', header=F)#
#alldata <- read.table('bland.txt', header=F)#
alldata <- read.table('door.txt', header=F)#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback')#
#######################################################################
#kids#
RL_subj <- c(62025, 62026, 62027, 50018, 50020, 50023, 50027, #
			 50028, 50122, 50123, 50124, 50030, 50136, 50137,#
			 50139, 50140, 50141, 1000, 1001, 1003, 1007, #
			 1008, 1009, 1010, 1011, 1015, 2012, 1016, 1021, #
			 1023, 2014, 2018, 2019, 2020, 2021,#
			 3092, 8120, 8122, 3098, 3100, 3101, 8123, 2105, 2106, 2107)#
#
Lag_subj <- c(62021, 62022, 62023, 62024, 62028, 62029, 50019, #
			  50117, 50119, 50024, 50025, 50026, 50029, 50031, #
			  50032, 50033, 50034, 50138, 4105, 1004, 1013, 2011, #
			  2013, 1018, 2015, 2016, 2108)#
#
random_subj <- c(50142, 1002, 1005, 1006, 1012, 1014, 2010, 1019, 1020, 2017, 3097)#
#
door_subj <- c(3093, 3094, 3095, 8121, 3096, 3099, 3102, 3103, 3104, 8124, 8125, 8126, 8127, #
				8128, 8129, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117)#
# GET ALL THE SUBJ NUMS FOR DOOR DATA AS WELL#
#
#######################################################################
#
RLdata <- alldata[alldata$subj %in% RL_subj & alldata$model == 'RL',]#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
Randdata <- alldata[alldata$subj %in% random_subj & alldata$model == 'Random',]#
Doordata <- alldata[alldata$subj %in% door_subj & alldata$model == 'Door',]#
#
#######################################################################
#
################
#
hazard_lengths <- tapply( RLdata$nback, list(RLdata$nback, RLdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="RL sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
######################
#
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
#
###############################
hazard_lengths <- tapply( Doordata$nback, list(Doordata$nback, Doordata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Door sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
choice_props <- tapply(Doordata$reward, list(Doordata$sim_unique, Doordata$reward), length)#
#
block1 <- Doordata[Doordata$trial <= 20,]#
block2 <- Doordata[Doordata$trial > 20 & Doordata$trial <= 40,]#
block3 <- Doordata[Doordata$trial > 40 & Doordata$trial <= 60,]#
block4 <- Doordata[Doordata$trial > 60 & Doordata$trial <= 80,]#
block5 <- Doordata[Doordata$trial > 80 & Doordata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Door sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
alldata <- read.table('kids.txt', header=F)#
#alldata <- read.table('adults.txt', header=F)#
#alldata <- read.table('bland.txt', header=F)#
#alldata <- read.table('door.txt', header=F)#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback')#
#######################################################################
#kids#
RL_subj <- c(62025, 62026, 62027, 50018, 50020, 50023, 50027, #
			 50028, 50122, 50123, 50124, 50030, 50136, 50137,#
			 50139, 50140, 50141, 1000, 1001, 1003, 1007, #
			 1008, 1009, 1010, 1011, 1015, 2012, 1016, 1021, #
			 1023, 2014, 2018, 2019, 2020, 2021,#
			 3092, 8120, 8122, 3098, 3100, 3101, 8123, 2105, 2106, 2107)#
#
Lag_subj <- c(62021, 62022, 62023, 62024, 62028, 62029, 50019, #
			  50117, 50119, 50024, 50025, 50026, 50029, 50031, #
			  50032, 50033, 50034, 50138, 4105, 1004, 1013, 2011, #
			  2013, 1018, 2015, 2016, 2108)#
#
random_subj <- c(50142, 1002, 1005, 1006, 1012, 1014, 2010, 1019, 1020, 2017, 3097)#
#
door_subj <- c(3093, 3094, 3095, 8121, 3096, 3099, 3102, 3103, 3104, 8124, 8125, 8126, 8127, #
				8128, 8129, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117)#
# GET ALL THE SUBJ NUMS FOR DOOR DATA AS WELL#
#
#######################################################################
#
RLdata <- alldata[alldata$subj %in% RL_subj & alldata$model == 'RL',]#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
Randdata <- alldata[alldata$subj %in% random_subj & alldata$model == 'Random',]#
Doordata <- alldata[alldata$subj %in% door_subj & alldata$model == 'Door',]#
#
#######################################################################
#
################
#
hazard_lengths <- tapply( RLdata$nback, list(RLdata$nback, RLdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="RL sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
######################
#
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
#
###############################
hazard_lengths <- tapply( Doordata$nback, list(Doordata$nback, Doordata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Door sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
#
############################################
#
hazard_lengths <- tapply( Randdata$nback, list(Randdata$nback, Randdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Random sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
################################################
#
choice_props <- tapply(RLdata$reward, list(RLdata$sim_unique, RLdata$reward), length)#
#
block1 <- RLdata[RLdata$trial <= 20,]#
block2 <- RLdata[RLdata$trial > 20 & RLdata$trial <= 40,]#
block3 <- RLdata[RLdata$trial > 40 & RLdata$trial <= 60,]#
block4 <- RLdata[RLdata$trial > 60 & RLdata$trial <= 80,]#
block5 <- RLdata[RLdata$trial > 80 & RLdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='RL sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')#
################################################
#
choice_props <- tapply(Lagdata$reward, list(Lagdata$sim_unique, Lagdata$reward), length)#
#
block1 <- Lagdata[Lagdata$trial <= 20,]#
block2 <- Lagdata[Lagdata$trial > 20 & Lagdata$trial <= 40,]#
block3 <- Lagdata[Lagdata$trial > 40 & Lagdata$trial <= 60,]#
block4 <- Lagdata[Lagdata$trial > 60 & Lagdata$trial <= 80,]#
block5 <- Lagdata[Lagdata$trial > 80 & Lagdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Lag sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')#
################################################
#
choice_props <- tapply(Randdata$reward, list(Randdata$sim_unique, Randdata$reward), length)#
#
block1 <- Randdata[Randdata$trial <= 20,]#
block2 <- Randdata[Randdata$trial > 20 & Randdata$trial <= 40,]#
block3 <- Randdata[Randdata$trial > 40 & Randdata$trial <= 60,]#
block4 <- Randdata[Randdata$trial > 60 & Randdata$trial <= 80,]#
block5 <- Randdata[Randdata$trial > 80 & Randdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Random sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')#
################################################
#
choice_props <- tapply(Doordata$reward, list(Doordata$sim_unique, Doordata$reward), length)#
#
block1 <- Doordata[Doordata$trial <= 20,]#
block2 <- Doordata[Doordata$trial > 20 & Doordata$trial <= 40,]#
block3 <- Doordata[Doordata$trial > 40 & Doordata$trial <= 60,]#
block4 <- Doordata[Doordata$trial > 60 & Doordata$trial <= 80,]#
block5 <- Doordata[Doordata$trial > 80 & Doordata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Door sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')#
###############################
#
#########################################################
#
#######################################################################################
#
transitions_subj <- tapply(alldata$reward, list( alldata$reward, alldata$prev_rew, alldata$sim_unique), length)#
transitions <- tapply(alldata$reward, list( alldata$reward, alldata$prev_rew), length)#
#
transitions_temp <- transitions#
#
sums <- colSums(transitions)#
for (i in seq(length(transitions[,1]))) {#
	transitions[i,] <- transitions_temp[i,]/sums#
}#
#
transitions[,2:5]#
#
library("RColorBrewer")#
#display all colour schemes#
display.brewer.all()#
tx <- transitions[order(as.integer(row.names(transitions)), decreasing = T),]#
#
heatmap(tx[,2:5], Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"), scale="none",#
			xlab = "previous trial", ylab = 'trial')
for (i in 1:length(alldata[,1])) {#
    alldata$stay[i] <- as.numeric(alldata[i,]$res == alldata[i-1,]$res)#
    alldata$prev_rew[i] <- alldata[i-1,]$reward#
    if (alldata[i,]$trial == 1) { #
    	alldata$stay[i] <- 0 #
    	alldata$prev_rew[i] <- -1#
    	}#
    }
for (i in 1:length(alldata[,1])) {#
    alldata$stay[i] <- as.numeric(alldata[i,]$res == alldata[i-1,]$res)#
    alldata$prev_rew[i] <- alldata[i-1,]$reward#
    if (alldata[i,]$trial == 0) { #
    	alldata$stay[i] <- 0 #
    	alldata$prev_rew[i] <- -1#
    	}#
    }
maindata$prev_rew <- NULL#
for (i in 1:length(alldata[,1])) {    #
    alldata$prev_rew[i] <- alldata[i-1,]$reward#
    if (alldata[i,]$trial == 0) { #
    	alldata$prev_rew[i] <- -1#
    	}#
    }
RL_subj <- c(62025, 62026, 62027, 50018, 50020, 50023, 50027, #
			 50028, 50122, 50123, 50124, 50030, 50136, 50137,#
			 50139, 50140, 50141, 1000, 1001, 1003, 1007, #
			 1008, 1009, 1010, 1011, 1015, 2012, 1016, 1021, #
			 1023, 2014, 2018, 2019, 2020, 2021,#
			 3092, 8120, 8122, 3098, 3100, 3101, 8123, 2105, 2106, 2107)#
#
Lag_subj <- c(62021, 62022, 62023, 62024, 62028, 62029, 50019, #
			  50117, 50119, 50024, 50025, 50026, 50029, 50031, #
			  50032, 50033, 50034, 50138, 4105, 1004, 1013, 2011, #
			  2013, 1018, 2015, 2016, 2108)#
#
random_subj <- c(50142, 1002, 1005, 1006, 1012, 1014, 2010, 1019, 1020, 2017, 3097)#
#
door_subj <- c(3093, 3094, 3095, 8121, 3096, 3099, 3102, 3103, 3104, 8124, 8125, 8126, 8127, #
				8128, 8129, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117)#
# GET ALL THE SUBJ NUMS FOR DOOR DATA AS WELL#
#
#######################################################################
#
RLdata <- alldata[alldata$subj %in% RL_subj & alldata$model == 'RL',]#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
Randdata <- alldata[alldata$subj %in% random_subj & alldata$model == 'Random',]#
Doordata <- alldata[alldata$subj %in% door_subj & alldata$model == 'Door',]#
#
#######################################################################
#
################
#
hazard_lengths <- tapply( RLdata$nback, list(RLdata$nback, RLdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="RL sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
######################
#
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
#
###############################
hazard_lengths <- tapply( Doordata$nback, list(Doordata$nback, Doordata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Door sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
#
############################################
#
hazard_lengths <- tapply( Randdata$nback, list(Randdata$nback, Randdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Random sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
################################################
#
choice_props <- tapply(RLdata$reward, list(RLdata$sim_unique, RLdata$reward), length)#
#
block1 <- RLdata[RLdata$trial <= 20,]#
block2 <- RLdata[RLdata$trial > 20 & RLdata$trial <= 40,]#
block3 <- RLdata[RLdata$trial > 40 & RLdata$trial <= 60,]#
block4 <- RLdata[RLdata$trial > 60 & RLdata$trial <= 80,]#
block5 <- RLdata[RLdata$trial > 80 & RLdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='RL sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')#
################################################
#
choice_props <- tapply(Lagdata$reward, list(Lagdata$sim_unique, Lagdata$reward), length)#
#
block1 <- Lagdata[Lagdata$trial <= 20,]#
block2 <- Lagdata[Lagdata$trial > 20 & Lagdata$trial <= 40,]#
block3 <- Lagdata[Lagdata$trial > 40 & Lagdata$trial <= 60,]#
block4 <- Lagdata[Lagdata$trial > 60 & Lagdata$trial <= 80,]#
block5 <- Lagdata[Lagdata$trial > 80 & Lagdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Lag sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')#
################################################
#
choice_props <- tapply(Randdata$reward, list(Randdata$sim_unique, Randdata$reward), length)#
#
block1 <- Randdata[Randdata$trial <= 20,]#
block2 <- Randdata[Randdata$trial > 20 & Randdata$trial <= 40,]#
block3 <- Randdata[Randdata$trial > 40 & Randdata$trial <= 60,]#
block4 <- Randdata[Randdata$trial > 60 & Randdata$trial <= 80,]#
block5 <- Randdata[Randdata$trial > 80 & Randdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Random sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')#
################################################
#
choice_props <- tapply(Doordata$reward, list(Doordata$sim_unique, Doordata$reward), length)#
#
block1 <- Doordata[Doordata$trial <= 20,]#
block2 <- Doordata[Doordata$trial > 20 & Doordata$trial <= 40,]#
block3 <- Doordata[Doordata$trial > 40 & Doordata$trial <= 60,]#
block4 <- Doordata[Doordata$trial > 60 & Doordata$trial <= 80,]#
block5 <- Doordata[Doordata$trial > 80 & Doordata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Door sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')#
###############################
#
#########################################################
#
#######################################################################################
#
transitions_subj <- tapply(alldata$reward, list( alldata$reward, alldata$prev_rew, alldata$sim_unique), length)#
transitions <- tapply(alldata$reward, list( alldata$reward, alldata$prev_rew), length)#
#
transitions_temp <- transitions#
#
sums <- colSums(transitions)#
for (i in seq(length(transitions[,1]))) {#
	transitions[i,] <- transitions_temp[i,]/sums#
}#
#
transitions[,2:5]#
#
library("RColorBrewer")#
#display all colour schemes#
display.brewer.all()#
tx <- transitions[order(as.integer(row.names(transitions)), decreasing = T),]#
#
heatmap(tx[,2:5], Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"), scale="none",#
			xlab = "previous trial", ylab = 'trial')
Lag_transitions <- tapply(Lagdata$reward, list( Lagdata$reward, Lagdata$prev_rew), length)#
#
Lag_transitions_temp <- Lag_transitions#
#
sums <- colSums(Lag_transitions)#
#
for (i in seq(length(Lag_transitions[,1]))) {#
	Lag_transitions[i,] <- Lag_transitions_temp[i,]/sums#
}#
tx <- Lag_transitions[order(as.integer(row.names(Lag_transitions)), decreasing = T),]#
#
heatmap(tx[,2:5], Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"), scale="none",#
			xlab = "previous trial", ylab = 'trial', main='Lag subjects')
alldata <- read.table('kids.txt', header=F)#
#alldata <- read.table('adults.txt', header=F)#
#alldata <- read.table('bland.txt', header=F)#
#alldata <- read.table('door.txt', header=F)#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
alldata[alldata$trial == 0, ]$prev_rew <- -1
alldata
alldata <- read.table('kids.txt', header=F)#
#alldata <- read.table('adults.txt', header=F)#
#alldata <- read.table('bland.txt', header=F)#
#alldata <- read.table('door.txt', header=F)#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
alldata[alldata$trial == 0, ]$prev_rew <- -1#
#######################################################################
#kids#
RL_subj <- c(62025, 62026, 62027, 50018, 50020, 50023, 50027, #
			 50028, 50122, 50123, 50124, 50030, 50136, 50137,#
			 50139, 50140, 50141, 1000, 1001, 1003, 1007, #
			 1008, 1009, 1010, 1011, 1015, 2012, 1016, 1021, #
			 1023, 2014, 2018, 2019, 2020, 2021,#
			 3092, 8120, 8122, 3098, 3100, 3101, 8123, 2105, 2106, 2107)#
#
Lag_subj <- c(62021, 62022, 62023, 62024, 62028, 62029, 50019, #
			  50117, 50119, 50024, 50025, 50026, 50029, 50031, #
			  50032, 50033, 50034, 50138, 4105, 1004, 1013, 2011, #
			  2013, 1018, 2015, 2016, 2108)#
#
random_subj <- c(50142, 1002, 1005, 1006, 1012, 1014, 2010, 1019, 1020, 2017, 3097)#
#
door_subj <- c(3093, 3094, 3095, 8121, 3096, 3099, 3102, 3103, 3104, 8124, 8125, 8126, 8127, #
				8128, 8129, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117)#
# GET ALL THE SUBJ NUMS FOR DOOR DATA AS WELL#
#
#######################################################################
#
RLdata <- alldata[alldata$subj %in% RL_subj & alldata$model == 'RL',]#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
Randdata <- alldata[alldata$subj %in% random_subj & alldata$model == 'Random',]#
Doordata <- alldata[alldata$subj %in% door_subj & alldata$model == 'Door',]#
#
#######################################################################
#
################
#
hazard_lengths <- tapply( RLdata$nback, list(RLdata$nback, RLdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="RL sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
######################
#
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
#
###############################
hazard_lengths <- tapply( Doordata$nback, list(Doordata$nback, Doordata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Door sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
#
############################################
#
hazard_lengths <- tapply( Randdata$nback, list(Randdata$nback, Randdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Random sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
################################################
#
choice_props <- tapply(RLdata$reward, list(RLdata$sim_unique, RLdata$reward), length)#
#
block1 <- RLdata[RLdata$trial <= 20,]#
block2 <- RLdata[RLdata$trial > 20 & RLdata$trial <= 40,]#
block3 <- RLdata[RLdata$trial > 40 & RLdata$trial <= 60,]#
block4 <- RLdata[RLdata$trial > 60 & RLdata$trial <= 80,]#
block5 <- RLdata[RLdata$trial > 80 & RLdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='RL sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')#
################################################
#
choice_props <- tapply(Lagdata$reward, list(Lagdata$sim_unique, Lagdata$reward), length)#
#
block1 <- Lagdata[Lagdata$trial <= 20,]#
block2 <- Lagdata[Lagdata$trial > 20 & Lagdata$trial <= 40,]#
block3 <- Lagdata[Lagdata$trial > 40 & Lagdata$trial <= 60,]#
block4 <- Lagdata[Lagdata$trial > 60 & Lagdata$trial <= 80,]#
block5 <- Lagdata[Lagdata$trial > 80 & Lagdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Lag sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')#
################################################
#
choice_props <- tapply(Randdata$reward, list(Randdata$sim_unique, Randdata$reward), length)#
#
block1 <- Randdata[Randdata$trial <= 20,]#
block2 <- Randdata[Randdata$trial > 20 & Randdata$trial <= 40,]#
block3 <- Randdata[Randdata$trial > 40 & Randdata$trial <= 60,]#
block4 <- Randdata[Randdata$trial > 60 & Randdata$trial <= 80,]#
block5 <- Randdata[Randdata$trial > 80 & Randdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Random sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')#
################################################
#
choice_props <- tapply(Doordata$reward, list(Doordata$sim_unique, Doordata$reward), length)#
#
block1 <- Doordata[Doordata$trial <= 20,]#
block2 <- Doordata[Doordata$trial > 20 & Doordata$trial <= 40,]#
block3 <- Doordata[Doordata$trial > 40 & Doordata$trial <= 60,]#
block4 <- Doordata[Doordata$trial > 60 & Doordata$trial <= 80,]#
block5 <- Doordata[Doordata$trial > 80 & Doordata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Door sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')#
###############################
#
#########################################################
#
#######################################################################################
#
transitions_subj <- tapply(alldata$reward, list( alldata$reward, alldata$prev_rew, alldata$sim_unique), length)#
transitions <- tapply(alldata$reward, list( alldata$reward, alldata$prev_rew), length)#
#
transitions_temp <- transitions#
#
sums <- colSums(transitions)#
for (i in seq(length(transitions[,1]))) {#
	transitions[i,] <- transitions_temp[i,]/sums#
}#
#
transitions[,2:5]#
#
library("RColorBrewer")#
#display all colour schemes#
display.brewer.all()#
tx <- transitions[order(as.integer(row.names(transitions)), decreasing = T),]#
#
heatmap(tx[,2:5], Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"), scale="none",#
			xlab = "previous trial", ylab = 'trial')
RL_transitions <- tapply(RLdata$reward, list( RLdata$reward, RLdata$prev_rew), length)#
#
RL_transitions_temp <- RL_transitions#
#
sums <- colSums(RL_transitions)#
#
for (i in seq(length(RL_transitions[,1]))) {#
	RL_transitions[i,] <- RL_transitions_temp[i,]/sums#
}#
tx <- RL_transitions[order(as.integer(row.names(RL_transitions)), decreasing = T),]#
#
heatmap(tx[,2:5], Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"), scale="none",#
			xlab = "previous trial", ylab = 'trial', main='RL subjects')
Lag_transitions <- tapply(Lagdata$reward, list( Lagdata$reward, Lagdata$prev_rew), length)#
#
Lag_transitions_temp <- Lag_transitions#
#
sums <- colSums(Lag_transitions)#
#
for (i in seq(length(Lag_transitions[,1]))) {#
	Lag_transitions[i,] <- Lag_transitions_temp[i,]/sums#
}#
tx <- Lag_transitions[order(as.integer(row.names(Lag_transitions)), decreasing = T),]#
#
heatmap(tx[,2:5], Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"), scale="none",#
			xlab = "previous trial", ylab = 'trial', main='Lag subjects')
Rand_transitions <- tapply(Randdata$reward, list( Randdata$reward, Randdata$prev_rew), length)#
#
Rand_transitions_temp <- Rand_transitions#
#
sums <- colSums(Rand_transitions)#
#
for (i in seq(length(Rand_transitions[,1]))) {#
	Rand_transitions[i,] <- Rand_transitions_temp[i,]/sums#
}#
tx <- Rand_transitions[order(as.integer(row.names(Rand_transitions)), decreasing = T),]#
#
heatmap(tx[,2:5], Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"), scale="none",#
			xlab = "previous trial", ylab = 'trial', main='Rand subjects')
alldata <- read.table('bland.txt', header=F)#
#alldata <- read.table('door.txt', header=F)#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
alldata[alldata$trial == 0, ]$prev_rew <- -1#
#######################################################################
#kids#
RL_subj <- c(62025, 62026, 62027, 50018, 50020, 50023, 50027, #
			 50028, 50122, 50123, 50124, 50030, 50136, 50137,#
			 50139, 50140, 50141, 1000, 1001, 1003, 1007, #
			 1008, 1009, 1010, 1011, 1015, 2012, 1016, 1021, #
			 1023, 2014, 2018, 2019, 2020, 2021,#
			 3092, 8120, 8122, 3098, 3100, 3101, 8123, 2105, 2106, 2107)#
#
Lag_subj <- c(62021, 62022, 62023, 62024, 62028, 62029, 50019, #
			  50117, 50119, 50024, 50025, 50026, 50029, 50031, #
			  50032, 50033, 50034, 50138, 4105, 1004, 1013, 2011, #
			  2013, 1018, 2015, 2016, 2108)#
#
random_subj <- c(50142, 1002, 1005, 1006, 1012, 1014, 2010, 1019, 1020, 2017, 3097)#
#
door_subj <- c(3093, 3094, 3095, 8121, 3096, 3099, 3102, 3103, 3104, 8124, 8125, 8126, 8127, #
				8128, 8129, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117)#
# GET ALL THE SUBJ NUMS FOR DOOR DATA AS WELL#
#
#######################################################################
#
RLdata <- alldata[alldata$subj %in% RL_subj & alldata$model == 'RL',]#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
Randdata <- alldata[alldata$subj %in% random_subj & alldata$model == 'Random',]#
Doordata <- alldata[alldata$subj %in% door_subj & alldata$model == 'Door',]#
#
#######################################################################
#
################
#
hazard_lengths <- tapply( RLdata$nback, list(RLdata$nback, RLdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="RL sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
######################
#
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
#
###############################
hazard_lengths <- tapply( Doordata$nback, list(Doordata$nback, Doordata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Door sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
#
############################################
#
hazard_lengths <- tapply( Randdata$nback, list(Randdata$nback, Randdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Random sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])#
################################################
#
choice_props <- tapply(RLdata$reward, list(RLdata$sim_unique, RLdata$reward), length)#
#
block1 <- RLdata[RLdata$trial <= 20,]#
block2 <- RLdata[RLdata$trial > 20 & RLdata$trial <= 40,]#
block3 <- RLdata[RLdata$trial > 40 & RLdata$trial <= 60,]#
block4 <- RLdata[RLdata$trial > 60 & RLdata$trial <= 80,]#
block5 <- RLdata[RLdata$trial > 80 & RLdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='RL sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')#
################################################
#
choice_props <- tapply(Lagdata$reward, list(Lagdata$sim_unique, Lagdata$reward), length)#
#
block1 <- Lagdata[Lagdata$trial <= 20,]#
block2 <- Lagdata[Lagdata$trial > 20 & Lagdata$trial <= 40,]#
block3 <- Lagdata[Lagdata$trial > 40 & Lagdata$trial <= 60,]#
block4 <- Lagdata[Lagdata$trial > 60 & Lagdata$trial <= 80,]#
block5 <- Lagdata[Lagdata$trial > 80 & Lagdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Lag sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')#
################################################
#
choice_props <- tapply(Randdata$reward, list(Randdata$sim_unique, Randdata$reward), length)#
#
block1 <- Randdata[Randdata$trial <= 20,]#
block2 <- Randdata[Randdata$trial > 20 & Randdata$trial <= 40,]#
block3 <- Randdata[Randdata$trial > 40 & Randdata$trial <= 60,]#
block4 <- Randdata[Randdata$trial > 60 & Randdata$trial <= 80,]#
block5 <- Randdata[Randdata$trial > 80 & Randdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Random sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')#
################################################
#
choice_props <- tapply(Doordata$reward, list(Doordata$sim_unique, Doordata$reward), length)#
#
block1 <- Doordata[Doordata$trial <= 20,]#
block2 <- Doordata[Doordata$trial > 20 & Doordata$trial <= 40,]#
block3 <- Doordata[Doordata$trial > 40 & Doordata$trial <= 60,]#
block4 <- Doordata[Doordata$trial > 60 & Doordata$trial <= 80,]#
block5 <- Doordata[Doordata$trial > 80 & Doordata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Door sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')#
###############################
#
#########################################################
#
#######################################################################################
RL_transitions <- tapply(RLdata$reward, list( RLdata$reward, RLdata$prev_rew), length)#
#
RL_transitions_temp <- RL_transitions#
#
sums <- colSums(RL_transitions)#
#
for (i in seq(length(RL_transitions[,1]))) {#
	RL_transitions[i,] <- RL_transitions_temp[i,]/sums#
}#
tx <- RL_transitions[order(as.integer(row.names(RL_transitions)), decreasing = T),]#
#
heatmap(tx[,2:5], Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"), scale="none",#
			xlab = "previous trial", ylab = 'trial', main='RL subjects')
Lag_transitions <- tapply(Lagdata$reward, list( Lagdata$reward, Lagdata$prev_rew), length)#
#
Lag_transitions_temp <- Lag_transitions#
#
sums <- colSums(Lag_transitions)#
#
for (i in seq(length(Lag_transitions[,1]))) {#
	Lag_transitions[i,] <- Lag_transitions_temp[i,]/sums#
}#
tx <- Lag_transitions[order(as.integer(row.names(Lag_transitions)), decreasing = T),]#
#
heatmap(tx[,2:5], Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"), scale="none",#
			xlab = "previous trial", ylab = 'trial', main='Lag subjects')
Rand_transitions <- tapply(Randdata$reward, list( Randdata$reward, Randdata$prev_rew), length)#
#
Rand_transitions_temp <- Rand_transitions#
#
sums <- colSums(Rand_transitions)#
#
for (i in seq(length(Rand_transitions[,1]))) {#
	Rand_transitions[i,] <- Rand_transitions_temp[i,]/sums#
}#
tx <- Rand_transitions[order(as.integer(row.names(Rand_transitions)), decreasing = T),]#
#
heatmap(tx[,2:5], Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"), scale="none",#
			xlab = "previous trial", ylab = 'trial', main='Rand subjects')
alldata <- read.table('door.txt', header=F)#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
alldata[alldata$trial == 0, ]$prev_rew <- -1#
#######################################################################
#kids#
RL_subj <- c(62025, 62026, 62027, 50018, 50020, 50023, 50027, #
			 50028, 50122, 50123, 50124, 50030, 50136, 50137,#
			 50139, 50140, 50141, 1000, 1001, 1003, 1007, #
			 1008, 1009, 1010, 1011, 1015, 2012, 1016, 1021, #
			 1023, 2014, 2018, 2019, 2020, 2021,#
			 3092, 8120, 8122, 3098, 3100, 3101, 8123, 2105, 2106, 2107)#
#
Lag_subj <- c(62021, 62022, 62023, 62024, 62028, 62029, 50019, #
			  50117, 50119, 50024, 50025, 50026, 50029, 50031, #
			  50032, 50033, 50034, 50138, 4105, 1004, 1013, 2011, #
			  2013, 1018, 2015, 2016, 2108)#
#
random_subj <- c(50142, 1002, 1005, 1006, 1012, 1014, 2010, 1019, 1020, 2017, 3097)#
#
door_subj <- c(3093, 3094, 3095, 8121, 3096, 3099, 3102, 3103, 3104, 8124, 8125, 8126, 8127, #
				8128, 8129, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117)#
# GET ALL THE SUBJ NUMS FOR DOOR DATA AS WELL#
#
#######################################################################
#
RLdata <- alldata[alldata$subj %in% RL_subj & alldata$model == 'RL',]#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
Randdata <- alldata[alldata$subj %in% random_subj & alldata$model == 'Random',]#
Doordata <- alldata[alldata$subj %in% door_subj & alldata$model == 'Door',]#
#
#######################################################################
#
################
#
hazard_lengths <- tapply( RLdata$nback, list(RLdata$nback, RLdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="RL sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
hazard_lengths <- tapply( Doordata$nback, list(Doordata$nback, Doordata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Door sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
hazard_lengths <- tapply( Randdata$nback, list(Randdata$nback, Randdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(0,10), main="Random sims")#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10])
block1 <- RLdata[RLdata$trial <= 20,]#
block2 <- RLdata[RLdata$trial > 20 & RLdata$trial <= 40,]#
block3 <- RLdata[RLdata$trial > 40 & RLdata$trial <= 60,]#
block4 <- RLdata[RLdata$trial > 60 & RLdata$trial <= 80,]#
block5 <- RLdata[RLdata$trial > 80 & RLdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='RL sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
block1 <- Lagdata[Lagdata$trial <= 20,]#
block2 <- Lagdata[Lagdata$trial > 20 & Lagdata$trial <= 40,]#
block3 <- Lagdata[Lagdata$trial > 40 & Lagdata$trial <= 60,]#
block4 <- Lagdata[Lagdata$trial > 60 & Lagdata$trial <= 80,]#
block5 <- Lagdata[Lagdata$trial > 80 & Lagdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Lag sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
block1 <- Randdata[Randdata$trial <= 20,]#
block2 <- Randdata[Randdata$trial > 20 & Randdata$trial <= 40,]#
block3 <- Randdata[Randdata$trial > 40 & Randdata$trial <= 60,]#
block4 <- Randdata[Randdata$trial > 60 & Randdata$trial <= 80,]#
block5 <- Randdata[Randdata$trial > 80 & Randdata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Random sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
choice_props <- tapply(Doordata$reward, list(Doordata$sim_unique, Doordata$reward), length)#
#
block1 <- Doordata[Doordata$trial <= 20,]#
block2 <- Doordata[Doordata$trial > 20 & Doordata$trial <= 40,]#
block3 <- Doordata[Doordata$trial > 40 & Doordata$trial <= 60,]#
block4 <- Doordata[Doordata$trial > 60 & Doordata$trial <= 80,]#
block5 <- Doordata[Doordata$trial > 80 & Doordata$trial <= 100,]#
block1_choices <- tapply(block1$reward, list(block1$sim_unique, block1$reward), length)#
block1_choices[is.na(block1_choices)] <- 0#
#
block2_choices <- tapply(block2$reward, list(block2$sim_unique, block2$reward), length)#
block2_choices[is.na(block2_choices)] <- 0#
#
block3_choices <- tapply(block3$reward, list(block3$sim_unique, block3$reward), length)#
block3_choices[is.na(block3_choices)] <- 0#
#
block4_choices <- tapply(block4$reward, list(block4$sim_unique, block4$reward), length)#
block4_choices[is.na(block4_choices)] <- 0#
#
block5_choices <- tapply(block5$reward, list(block5$sim_unique, block5$reward), length)#
block5_choices[is.na(block5_choices)] <- 0#
# means#
line10_means <- c( mean(block1_choices[,4]), #
             mean(block2_choices[,4]),#
             mean(block3_choices[,4]),#
             mean(block4_choices[,4]),#
             mean(block5_choices[,4]))#
line3_means <- c( mean(block1_choices[,3]), #
             mean(block2_choices[,3]),#
             mean(block3_choices[,3]),#
             mean(block4_choices[,3]),#
             mean(block5_choices[,3]))#
line2_means <- c( mean(block1_choices[,2]), #
             mean(block2_choices[,2]),#
             mean(block3_choices[,2]),#
             mean(block4_choices[,2]),#
             mean(block5_choices[,2]))#
line1_means <- c( mean(block1_choices[,1]), #
             mean(block2_choices[,1]),#
             mean(block3_choices[,1]),#
             mean(block4_choices[,1]),#
             mean(block5_choices[,1]))#
#
# standard deviations#
line10_sds <- c( sd(block1_choices[,4]), #
             sd(block2_choices[,4]),#
             sd(block3_choices[,4]),#
             sd(block4_choices[,4]),#
             sd(block5_choices[,4]))#
line3_sds <- c( sd(block1_choices[,3]), #
             sd(block2_choices[,3]),#
             sd(block3_choices[,3]),#
             sd(block4_choices[,3]),#
             sd(block5_choices[,3]))#
line2_sds <- c( sd(block1_choices[,2]), #
             sd(block2_choices[,2]),#
             sd(block3_choices[,2]),#
             sd(block4_choices[,2]),#
             sd(block5_choices[,2]))#
line1_sds <- c( sd(block1_choices[,1]), #
             sd(block2_choices[,1]),#
             sd(block3_choices[,1]),#
             sd(block4_choices[,1]),#
             sd(block5_choices[,1]))#
#
# Ns#
line10_lengths <- c( length(block1_choices[,4]), #
             length(block2_choices[,4]),#
             length(block3_choices[,4]),#
             length(block4_choices[,4]),#
             length(block5_choices[,4]))#
line3_lengths <- c( length(block1_choices[,3]), #
             length(block2_choices[,3]),#
             length(block3_choices[,3]),#
             length(block4_choices[,3]),#
             length(block5_choices[,3]))#
line2_lengths <- c( length(block1_choices[,2]), #
             length(block2_choices[,2]),#
             length(block3_choices[,2]),#
             length(block4_choices[,2]),#
             length(block5_choices[,2]))#
line1_lengths <- c( length(block1_choices[,1]), #
             length(block2_choices[,1]),#
             length(block3_choices[,1]),#
             length(block4_choices[,1]),#
             length(block5_choices[,1]))#
line10_ses <- line10_sds/sqrt(line10_lengths)#
line3_ses <- line3_sds/sqrt(line3_lengths)#
line2_ses <- line2_sds/sqrt(line2_lengths)#
line1_ses <- line1_sds/sqrt(line1_lengths)#
plot(line10_means/20, type='l', col = 'blue', #
	 ylim=c(0,1), ylab='Proportion of selections', #
	 xlab="Block (20 trials)", main='Door sims', cex.lab= 1.4, cex.axis=1.3, lwd=3)#
lines(line3_means/20, col = 'green', lwd=3)#
lines(line2_means/20, col = 'yellow', lwd=3)#
lines(line1_means/20, col = 'red', lwd=3)#
#
legend(1, 1.0, c("10", "3", "2", "1"), #
	   col = c("blue", "green", "yellow", "red"), #
	   lty = c(1,1,1,1), cex = 1.2)#
#
x <- seq(5)#
segments(x, line10_means/20+line10_ses/20, x, line10_means/20-line10_ses/20, col='blue')#
segments(x, line3_means/20+line3_ses/20, x, line3_means/20-line3_ses/20, col='green')#
segments(x, line2_means/20+line2_ses/20, x, line2_means/20-line2_ses/20, col='yellow')#
segments(x, line1_means/20+line1_ses/20, x, line1_means/20-line1_ses/20, col='red')
RL_transitions <- tapply(RLdata$reward, list( RLdata$reward, RLdata$prev_rew), length)#
#
RL_transitions_temp <- RL_transitions#
#
sums <- colSums(RL_transitions)#
#
for (i in seq(length(RL_transitions[,1]))) {#
	RL_transitions[i,] <- RL_transitions_temp[i,]/sums#
}#
tx <- RL_transitions[order(as.integer(row.names(RL_transitions)), decreasing = T),]#
#
heatmap(tx[,2:5], Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"), scale="none",#
			xlab = "previous trial", ylab = 'trial', main='RL subjects')#
Lag_transitions <- tapply(Lagdata$reward, list( Lagdata$reward, Lagdata$prev_rew), length)#
#
Lag_transitions_temp <- Lag_transitions#
#
sums <- colSums(Lag_transitions)#
#
for (i in seq(length(Lag_transitions[,1]))) {#
	Lag_transitions[i,] <- Lag_transitions_temp[i,]/sums#
}#
tx <- Lag_transitions[order(as.integer(row.names(Lag_transitions)), decreasing = T),]#
#
heatmap(tx[,2:5], Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"), scale="none",#
			xlab = "previous trial", ylab = 'trial', main='Lag subjects')
RL_transitions <- tapply(RLdata$reward, list( RLdata$reward, RLdata$prev_rew), length)#
#
RL_transitions_temp <- RL_transitions#
#
sums <- colSums(RL_transitions)#
#
for (i in seq(length(RL_transitions[,1]))) {#
	RL_transitions[i,] <- RL_transitions_temp[i,]/sums#
}#
tx <- RL_transitions[order(as.integer(row.names(RL_transitions)), decreasing = T),]#
#
heatmap(tx[,2:5], Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"), scale="none",#
			xlab = "previous trial", ylab = 'trial', main='RL subjects')
Rand_transitions <- tapply(Randdata$reward, list( Randdata$reward, Randdata$prev_rew), length)#
#
Rand_transitions_temp <- Rand_transitions#
#
sums <- colSums(Rand_transitions)#
#
for (i in seq(length(Rand_transitions[,1]))) {#
	Rand_transitions[i,] <- Rand_transitions_temp[i,]/sums#
}#
tx <- Rand_transitions[order(as.integer(row.names(Rand_transitions)), decreasing = T),]#
#
heatmap(tx[,2:5], Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"), scale="none",#
			xlab = "previous trial", ylab = 'trial', main='Rand subjects')
Door_transitions <- tapply(Doordata$reward, list( Doordata$reward, Doordata$prev_rew), length)#
#
Door_transitions_temp <- Door_transitions#
#
sums <- colSums(Door_transitions)#
#
for (i in seq(length(Door_transitions[,1]))) {#
	Door_transitions[i,] <- Door_transitions_temp[i,]/sums#
}#
tx <- Door_transitions[order(as.integer(row.names(Door_transitions)), decreasing = T),]#
#
heatmap(tx[,2:5], Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"), scale="none",#
			xlab = "previous trial", ylab = 'trial', main='Door subjects')
alldata <- read.table('kids.txt', header=F)#
#alldata <- read.table('adults.txt', header=F)#
#alldata <- read.table('bland.txt', header=F)#
#alldata <- read.table('door.txt', header=F)#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
alldata[alldata$trial == 0, ]$prev_rew <- -1#
#######################################################################
#kids#
RL_subj <- c(62025, 62026, 62027, 50018, 50020, 50023, 50027, #
			 50028, 50122, 50123, 50124, 50030, 50136, 50137,#
			 50139, 50140, 50141, 1000, 1001, 1003, 1007, #
			 1008, 1009, 1010, 1011, 1015, 2012, 1016, 1021, #
			 1023, 2014, 2018, 2019, 2020, 2021,#
			 3092, 8120, 8122, 3098, 3100, 3101, 8123, 2105, 2106, 2107)#
#
Lag_subj <- c(62021, 62022, 62023, 62024, 62028, 62029, 50019, #
			  50117, 50119, 50024, 50025, 50026, 50029, 50031, #
			  50032, 50033, 50034, 50138, 4105, 1004, 1013, 2011, #
			  2013, 1018, 2015, 2016, 2108)#
#
random_subj <- c(50142, 1002, 1005, 1006, 1012, 1014, 2010, 1019, 1020, 2017, 3097)#
#
door_subj <- c(3093, 3094, 3095, 8121, 3096, 3099, 3102, 3103, 3104, 8124, 8125, 8126, 8127, #
				8128, 8129, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117)#
#######################################################################
#
RLdata <- alldata[alldata$subj %in% RL_subj & alldata$model == 'RL',]#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
Randdata <- alldata[alldata$subj %in% random_subj & alldata$model == 'Random',]#
Doordata <- alldata[alldata$subj %in% door_subj & alldata$model == 'Door',]#
#
#######################################################################
#
#######################################################################################
RL_transitions <- tapply(RLdata$reward, list( RLdata$reward, RLdata$prev_rew), length)#
#
RL_transitions_temp <- RL_transitions#
#
sums <- colSums(RL_transitions)#
#
for (i in seq(length(RL_transitions[,1]))) {#
	RL_transitions[i,] <- RL_transitions_temp[i,]/sums#
}#
tx <- RL_transitions[order(as.integer(row.names(RL_transitions)), decreasing = T),]#
#
library(gplots)#
library("RColorBrewer")#
heatmap.2(tx[,2:5], cellnote=round(tx[,2:5],3), Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"), #
			dendrogram = 'none', notecol='black', revC=T, notecex=1.5, trace='none',#
			breaks = c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0),#
			scale="none", xlab = "previous trial", ylab = 'trial')
heatmap.2(tx[,2:5], cellnote=round(tx[,2:5],3), Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"), #
			dendrogram = 'none', notecol='black', revC=T, notecex=1.5, trace='none',#
			breaks = c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0),#
			scale="none", xlab = "previous trial", ylab = 'trial', density.info="none")
Lag_transitions <- tapply(Lagdata$reward, list( Lagdata$reward, Lagdata$prev_rew), length)#
#
Lag_transitions_temp <- Lag_transitions#
#
sums <- colSums(Lag_transitions)#
#
for (i in seq(length(Lag_transitions[,1]))) {#
	Lag_transitions[i,] <- Lag_transitions_temp[i,]/sums#
}#
tx <- Lag_transitions[order(as.integer(row.names(Lag_transitions)), decreasing = T),]#
#
heatmap.2(tx[,2:5], cellnote=round(tx[,2:5],3), Rowv=NA, Colv=NA, col=brewer.pal(9,"Blues"), #
			dendrogram = 'none', notecol='black', revC=T, notecex=1.5, trace='none',#
			breaks = c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0),#
			scale="none", xlab = "previous trial", ylab = 'trial', density.info="none")
alldata <- read.table('kids.txt', header=F)#
#alldata <- read.table('adults.txt', header=F)#
#alldata <- read.table('bland.txt', header=F)#
#alldata <- read.table('door.txt', header=F)#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
alldata[alldata$trial == 0, ]$prev_rew <- -1#
#######################################################################
#kids#
RL_subj <- c(62025, 62026, 62027, 50018, 50020, 50023, 50027, #
			 50028, 50122, 50123, 50124, 50030, 50136, 50137,#
			 50139, 50140, 50141, 1000, 1001, 1003, 1007, #
			 1008, 1009, 1010, 1011, 1015, 2012, 1016, 1021, #
			 1023, 2014, 2018, 2019, 2020, 2021,#
			 3092, 8120, 8122, 3098, 3100, 3101, 8123, 2105, 2106, 2107)#
#
Lag_subj <- c(62021, 62022, 62023, 62024, 62028, 62029, 50019, #
			  50117, 50119, 50024, 50025, 50026, 50029, 50031, #
			  50032, 50033, 50034, 50138, 4105, 1004, 1013, 2011, #
			  2013, 1018, 2015, 2016, 2108)#
#
random_subj <- c(50142, 1002, 1005, 1006, 1012, 1014, 2010, 1019, 1020, 2017, 3097)#
#
door_subj <- c(3093, 3094, 3095, 8121, 3096, 3099, 3102, 3103, 3104, 8124, 8125, 8126, 8127, #
				8128, 8129, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117)#
#######################################################################
#
RLdata <- alldata[alldata$subj %in% RL_subj & alldata$model == 'RL',]#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
Randdata <- alldata[alldata$subj %in% random_subj & alldata$model == 'Random',]#
Doordata <- alldata[alldata$subj %in% door_subj & alldata$model == 'Door',]#
#
#######################################################################
#
################
#
hazard_lengths <- tapply( RLdata$nback, list(RLdata$nback, RLdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
#
hazard_props <- hazard_lengths/hazard_sums#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
hazard_Ns <- rowSums(!is.na(hazard_props))#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(1,7), main="Hazard rates", ylim=c(0.0,0.8), #
		col='red', ylab='Proportion of trials given option chosen',#
		xlab='Trials since option last chosen', lwd=2)#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='red')
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
#x= seq(10)#
#plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
lines( hazard_means,  lwd=2, col='purple')#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='purple')#
legend(1, 0.8, c("Value", "Lag"), #
	   col = c("purple", "red"), #
	   lty = c(1,1), cex = 1.2)
setwd('/Users/nathanblanco/Dropbox/Work/current_projects/exploration studies/Baseline/data/models/modeling results')#
child.ebm.data <- read.table('EBM_params_children.txt',header=T)#
adult.ebm.data <- read.table('EBM_params_adults.txt',header=T)#
#
child.RL.data <- read.table('RL_params_children.txt',header=T)#
adult.RL.data <- read.table('RL_params_adults.txt',header=T)#
#
child.pattern.data <- read.table('pattern_model_children.txt', header=T)#
adult.pattern.data <- read.table('pattern_model_adults.txt', header=T)#
#
# mean is dashed, median is solid#
#
childAICS <- NULL#
childAICS$RL <- child.RL.data$RL_aic#
childAICS$ebm <- child.ebm.data$ebm_aic#
childAICS$pattern <- child.pattern.data$Pattern_aic#
#
childAICS <- as.data.frame(childAICS)#
#
childAICS$ebm_best <- as.numeric((childAICS$ebm < childAICS$pattern) & (childAICS$ebm < childAICS$RL))#
childAICS$RL_best <- as.numeric((childAICS$RL < childAICS$pattern) & (childAICS$RL < childAICS$ebm))#
childAICS$pattern_best <- as.numeric((childAICS$pattern < childAICS$ebm) & (childAICS$pattern < childAICS$RL))#
#
childAICS$pattern_over_ebm <- as.numeric((childAICS$pattern < childAICS$ebm))#
#
colSums(childAICS)#
adultAICS <- NULL#
adultAICS$RL <- adult.RL.data$RL_aic#
adultAICS$ebm <- adult.ebm.data$ebm_aic#
adultAICS$pattern <- adult.pattern.data$Pattern_aic#
#
adultAICS <- as.data.frame(adultAICS)#
#
adultAICS$ebm_best <- as.numeric((adultAICS$ebm < adultAICS$pattern) & (adultAICS$ebm < adultAICS$RL))#
adultAICS$RL_best <- as.numeric((adultAICS$RL < adultAICS$pattern) & (adultAICS$RL < adultAICS$ebm))#
adultAICS$pattern_best <- as.numeric((adultAICS$pattern < adultAICS$ebm) & (adultAICS$pattern < adultAICS$RL))#
#
adultAICS$pattern_over_ebm <- as.numeric((adultAICS$pattern < adultAICS$ebm))#
#
colSums(adultAICS)
childAICS
setwd('/Users/nathanblanco/Dropbox/Work/current_projects/exploration studies/Baseline/data/models/separate models/modeling results/sims')#
#
alldata <- read.table('kids.txt', header=F)#
#
patterndata <- read.table('pattern_sims.txt', header=F)#
#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
#
names(patterndata) <- c('subj', 'model', 'cw', 'ccw', 'skip', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
#
alldata[alldata$trial == 0, ]$prev_rew <- -1#
#######################################################################
#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
#
#######################################################################
#
################
#
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
#
hazard_props <- hazard_lengths/hazard_sums#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
hazard_Ns <- rowSums(!is.na(hazard_props))#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(1,7), main="Hazard rates", ylim=c(0.0,0.8), #
		col='purple', ylab='Proportion of trials given option chosen',#
		xlab='Trials since option last chosen', lwd=2)#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='purple')#
#
######################
hazard_lengths <- tapply( patterndata$nback, list(patterndata$nback, patterndata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
#x= seq(10)#
#plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
lines( hazard_means,  lwd=2, col='green')#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='green')#
legend(1, 0.8, c("Lag", "Pattern"), #
	   col = c("purple", "red"), #
	   lty = c(1,1), cex = 1.2)
setwd('/Users/nathanblanco/Dropbox/Work/current_projects/exploration studies/Baseline/data/models/separate models/modeling results/sims')#
#
alldata <- read.table('kids.txt', header=F)#
#
patterndata <- read.table('pattern_sims.txt', header=F)#
#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
#
names(patterndata) <- c('subj', 'model', 'cw', 'ccw', 'skip', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
#
alldata[alldata$trial == 0, ]$prev_rew <- -1#
#######################################################################
#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
#
#######################################################################
#
################
#
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
#
hazard_props <- hazard_lengths/hazard_sums#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
hazard_Ns <- rowSums(!is.na(hazard_props))#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(1,7), main="Hazard rates", ylim=c(0.0,0.8), #
		col='purple', ylab='Proportion of trials given option chosen',#
		xlab='Trials since option last chosen', lwd=2)#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='purple')#
#
######################
hazard_lengths <- tapply( patterndata$nback, list(patterndata$nback, patterndata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
#x= seq(10)#
#plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
lines( hazard_means,  lwd=2, col='green')#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='green')#
legend(1, 0.8, c("Lag", "Pattern"), #
	   col = c("purple", "red"), #
	   lty = c(1,1), cex = 1.2)
setwd('/Users/nathanblanco/Dropbox/Work/current_projects/exploration studies/Baseline/data/models/separate models/modeling results/sims')#
#
alldata <- read.table('kids.txt', header=F)#
#
patterndata <- read.table('pattern_sims.txt', header=F)#
#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
#
names(patterndata) <- c('subj', 'model', 'cw', 'ccw', 'skip', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
#
alldata[alldata$trial == 0, ]$prev_rew <- -1#
#######################################################################
#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
#
#######################################################################
#
################
#
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
#
hazard_props <- hazard_lengths/hazard_sums#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
hazard_Ns <- rowSums(!is.na(hazard_props))#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(1,7), main="Hazard rates", ylim=c(0.0,0.8), #
		col='purple', ylab='Proportion of trials given option chosen',#
		xlab='Trials since option last chosen', lwd=2)#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='purple')#
#
######################
hazard_lengths <- tapply( patterndata$nback, list(patterndata$nback, patterndata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
#x= seq(10)#
#plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
lines( hazard_means,  lwd=2, col='green')#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='green')#
legend(1, 0.8, c("Lag", "Pattern"), #
	   col = c("purple", "green"), #
	   lty = c(1,1), cex = 1.2)
hazard_lengths
setwd('/Users/nathanblanco/Dropbox/Work/current_projects/exploration studies/Baseline/data/models/separate models/modeling results/sims')#
#
alldata <- read.table('kids.txt', header=F)#
#
patterndata <- read.table('pattern_sims.txt', header=F)#
#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
#
names(patterndata) <- c('subj', 'model', 'cw', 'ccw', 'skip', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
#
alldata[alldata$trial == 0, ]$prev_rew <- -1#
#######################################################################
#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
#
#######################################################################
#
################
#
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
#
hazard_props <- hazard_lengths/hazard_sums#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
hazard_Ns <- rowSums(!is.na(hazard_props))#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(1,7), main="Hazard rates", ylim=c(0.0,0.8), #
		col='purple', ylab='Proportion of trials given option chosen',#
		xlab='Trials since option last chosen', lwd=2)#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='purple')#
#
######################
hazard_lengths <- tapply( patterndata$nback, list(patterndata$nback, patterndata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[21:length(hazard_lengths[,1]),]#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
#x= seq(10)#
#plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
lines( hazard_means,  lwd=2, col='green')#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='green')#
legend(1, 0.8, c("Lag", "Pattern"), #
	   col = c("purple", "green"), #
	   lty = c(1,1), cex = 1.2)
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
#
names(patterndata) <- c('subj', 'model', 'cw', 'ccw', 'skip', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
#
alldata[alldata$trial == 0, ]$prev_rew <- -1#
#######################################################################
#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
#
#######################################################################
#
################
#
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[2:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(2:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
#
hazard_props <- hazard_lengths/hazard_sums#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
hazard_Ns <- rowSums(!is.na(hazard_props))#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(1,7), main="Hazard rates", ylim=c(0.0,0.8), #
		col='purple', ylab='Proportion of trials given option chosen',#
		xlab='Trials since option last chosen', lwd=2)#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='purple')
hazard_lengths
setwd('/Users/nathanblanco/Dropbox/Work/current_projects/exploration studies/Baseline/data/models/separate models/modeling results/sims')#
#
alldata <- read.table('kids.txt', header=F)#
#
patterndata <- read.table('pattern_sims.txt', header=F)#
#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
#
names(patterndata) <- c('subj', 'model', 'cw', 'ccw', 'skip', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
#
alldata[alldata$trial == 0, ]$prev_rew <- -1#
#######################################################################
#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
#
#######################################################################
#
################
#
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[1:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(1:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
#
hazard_props <- hazard_lengths/hazard_sums#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
hazard_Ns <- rowSums(!is.na(hazard_props))#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(1,7), main="Hazard rates", ylim=c(0.0,0.8), #
		col='purple', ylab='Proportion of trials given option chosen',#
		xlab='Trials since option last chosen', lwd=2)#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='purple')#
#
######################
hazard_lengths <- tapply( patterndata$nback, list(patterndata$nback, patterndata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[1:length(hazard_lengths[,1]),]#
hazard_sums <- hazard_lengths#
#
for (i in seq(1:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
#x= seq(10)#
#plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
lines( hazard_means,  lwd=2, col='green')#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='green')#
legend(1, 0.8, c("Lag", "Pattern"), #
	   col = c("purple", "green"), #
	   lty = c(1,1), cex = 1.2)
hazard_sums
hazard_lenghts
hazard_lengths
setwd('/Users/nathanblanco/Dropbox/Work/current_projects/exploration studies/Baseline/data/models/separate models/modeling results/sims')#
#
alldata <- read.table('kids.txt', header=F)#
#
patterndata <- read.table('pattern_sims.txt', header=F)#
#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
#
names(patterndata) <- c('subj', 'model', 'cw', 'ccw', 'skip', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
#
alldata[alldata$trial == 0, ]$prev_rew <- -1#
#######################################################################
#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
#
#######################################################################
#
################
#
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[1:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(1:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
#
hazard_props <- hazard_lengths/hazard_sums#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
hazard_Ns <- rowSums(!is.na(hazard_props))#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(1,7), main="Hazard rates", ylim=c(0.0,0.8), #
		col='purple', ylab='Proportion of trials given option chosen',#
		xlab='Trials since option last chosen', lwd=2)#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='purple')#
#
######################
hazard_lengths <- tapply( patterndata$nback, list(patterndata$nback, patterndata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[1:length(hazard_lengths[,1]),]#
hazard_sums <- hazard_lengths#
#
for (i in seq(1:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
#x= seq(10)#
#plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
lines( hazard_means,  lwd=2, col='green')#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='green')#
legend(1, 0.8, c("Lag", "Pattern"), #
	   col = c("purple", "green"), #
	   lty = c(1,1), cex = 1.2)
hazard_lengths[1:length(hazard_lengths[,1]),]
setwd('/Users/nathanblanco/Dropbox/Work/current_projects/exploration studies/Baseline/data/models/separate models/modeling results/sims')#
#
alldata <- read.table('kids.txt', header=F)#
#
patterndata <- read.table('pattern_sims.txt', header=F)#
#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
#
names(patterndata) <- c('subj', 'model', 'cw', 'ccw', 'skip', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
#
alldata[alldata$trial == 0, ]$prev_rew <- -1#
#######################################################################
#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
#
#######################################################################
#
################
#
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[1:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(1:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
#
hazard_props <- hazard_lengths/hazard_sums#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
hazard_Ns <- rowSums(!is.na(hazard_props))#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(1,7), main="Hazard rates", ylim=c(0.0,0.8), #
		col='purple', ylab='Proportion of trials given option chosen',#
		xlab='Trials since option last chosen', lwd=2)#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='purple')#
#
######################
hazard_lengths <- tapply( patterndata$nback, list(patterndata$nback, patterndata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[1:length(hazard_lengths[,1]),]#
hazard_sums <- hazard_lengths#
#
for (i in seq(1:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
#x= seq(10)#
#plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
lines( hazard_means,  lwd=2, col='green')#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='black', lty=2)#
legend(1, 0.8, c("Lag", "Pattern"), #
	   col = c("purple", "black"), #
	   lty = c(1,2), cex = 1.2)
setwd('/Users/nathanblanco/Dropbox/Work/current_projects/exploration studies/Baseline/data/models/separate models/modeling results/sims')#
#
alldata <- read.table('kids.txt', header=F)#
#
patterndata <- read.table('pattern_sims.txt', header=F)#
#
#outputs.append([subj, 'RL', B_value, sim, (subj*1000)+sim, trial, res, payoff, chose_door])#
#
names(alldata) <- c('subj', 'model', 'beta', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
#
names(patterndata) <- c('subj', 'model', 'cw', 'ccw', 'skip', 'sim_num', 'sim_unique', #
					'trial', 'res', 'reward', 'chose_door', 'stay', 'nback', 'prev_rew')#
#
alldata[alldata$trial == 0, ]$prev_rew <- -1#
#######################################################################
#
Lagdata <- alldata[alldata$subj %in% Lag_subj & alldata$model == 'Lag',]#
#
#######################################################################
#
################
#
hazard_lengths <- tapply( Lagdata$nback, list(Lagdata$nback, Lagdata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[1:length(hazard_lengths[,1]),]#
#
hazard_sums <- hazard_lengths#
#
for (i in seq(1:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
#
hazard_props <- hazard_lengths/hazard_sums#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
hazard_Ns <- rowSums(!is.na(hazard_props))#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
x= seq(10)#
plot( hazard_means, type='l', xlim=c(1,7), main="Hazard rates", ylim=c(0.0,0.8), #
		col='purple', ylab='Proportion of trials given option chosen',#
		xlab='Trials since option last chosen', lwd=2)#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='purple')#
#
######################
hazard_lengths <- tapply( patterndata$nback, list(patterndata$nback, patterndata$sim_unique), length )#
hazard_lengths[is.na(hazard_lengths)] <- 0#
#
# cut out the zero row which is meaningless#
hazard_lengths <- hazard_lengths[1:length(hazard_lengths[,1]),]#
hazard_sums <- hazard_lengths#
#
for (i in seq(1:length(hazard_lengths[,1]))) {#
	hazard_sums[i,] <- colSums( hazard_lengths[i:length(hazard_lengths[,1]),] )#
#
}#
hazard_props <- hazard_lengths/hazard_sums#
#
hazard_means <- rowMeans(hazard_props, na.rm=T)#
#
library(matrixStats)#
#
hazard_sds <- rowSds(hazard_props, na.rm=T)#
#
hazard_Ns <- rowSums(!is.na(hazard_props))#
#
hazard_ses <- hazard_sds/sqrt(hazard_Ns)#
#
#x= seq(10)#
#plot( hazard_means, type='l', xlim=c(0,10), main="Lag sims")#
lines( hazard_means,  lwd=2, col='black', lty=2)#
segments(x, hazard_means[1:10]+hazard_ses[1:10], x, hazard_means[1:10]-hazard_ses[1:10], col='black', lty=2)#
legend(1, 0.8, c("Lag", "Pattern"), #
	   col = c("purple", "black"), #
	   lty = c(1,2), cex = 1.2)
sqrt(10)
